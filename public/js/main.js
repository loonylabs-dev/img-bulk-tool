(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function r(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(e){if(e.ep)return;e.ep=!0;const i=r(e);fetch(e.href,i)}})();(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const i of e.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function s(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function r(t){if(t.ep)return;t.ep=!0;const e=s(t);fetch(t.href,e)}})();var u=Object.defineProperty,h=(n,s,r)=>s in n?u(n,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[s]=r,a=(n,s,r)=>h(n,typeof s!="symbol"?s+"":s,r);class p{constructor(){a(this,"images",[]),a(this,"dropZone"),a(this,"fileInput"),a(this,"imageList"),a(this,"processBtn"),a(this,"progressOverlay"),a(this,"progressFill"),a(this,"progressText"),a(this,"resultsSection"),a(this,"resultsList"),this.dropZone=document.getElementById("dropZone"),this.fileInput=document.getElementById("fileInput"),this.imageList=document.getElementById("imageList"),this.processBtn=document.getElementById("processBtn"),this.progressOverlay=document.getElementById("progressOverlay"),this.progressFill=document.getElementById("progressFill"),this.progressText=document.getElementById("progressText"),this.resultsSection=document.getElementById("results"),this.resultsList=document.getElementById("resultsList"),this.initEventListeners()}initEventListeners(){var s;document.addEventListener("dragenter",e=>e.preventDefault()),document.addEventListener("dragover",e=>e.preventDefault()),document.addEventListener("dragleave",e=>e.preventDefault()),document.addEventListener("drop",e=>e.preventDefault()),this.dropZone.addEventListener("click",()=>this.fileInput.click()),this.dropZone.addEventListener("dragover",this.handleDragOver.bind(this)),this.dropZone.addEventListener("dragleave",this.handleDragLeave.bind(this)),this.dropZone.addEventListener("drop",this.handleDrop.bind(this)),this.fileInput.addEventListener("change",this.handleFileSelect.bind(this)),this.processBtn.addEventListener("click",this.processImages.bind(this)),document.querySelectorAll('input[name="mode"]').forEach(e=>{e.addEventListener("change",this.handleModeChange.bind(this))});const r=document.getElementById("quality"),t=document.getElementById("qualityValue");r.addEventListener("input",()=>{t.textContent=`${r.value}%`}),(s=document.getElementById("downloadAllBtn"))==null||s.addEventListener("click",this.downloadAll.bind(this))}handleDragOver(s){s.preventDefault(),s.stopPropagation(),this.dropZone.classList.add("drag-over")}handleDragLeave(s){s.preventDefault(),s.stopPropagation(),this.dropZone.classList.remove("drag-over")}handleDrop(s){var r;s.preventDefault(),s.stopPropagation(),this.dropZone.classList.remove("drag-over");const t=Array.from(((r=s.dataTransfer)==null?void 0:r.files)||[]);this.addFiles(t)}handleFileSelect(s){const r=s.target,t=Array.from(r.files||[]);this.addFiles(t)}addFiles(s){s.filter(r=>r.type.startsWith("image/")).forEach(r=>{const t=new FileReader;t.onload=e=>{var i;this.images.push({file:r,preview:(i=e.target)==null?void 0:i.result,prefix:""}),this.renderImageList()},t.readAsDataURL(r)})}renderImageList(){if(this.images.length===0){this.imageList.innerHTML="",this.processBtn.disabled=!0;return}this.processBtn.disabled=!1,this.imageList.innerHTML=this.images.map((s,r)=>`
      <div class="image-item" data-index="${r}">
        <img src="${s.preview}" alt="${s.file.name}">
        <div class="image-info">
          <p class="image-name">${s.file.name}</p>
          <p class="image-size">${this.formatFileSize(s.file.size)}</p>
          <input type="text" 
                 class="prefix-input" 
                 placeholder="PrÃ¤fix (optional)" 
                 data-index="${r}"
                 value="${s.prefix}">
        </div>
        <button class="remove-btn" data-index="${r}">Ã—</button>
      </div>
    `).join(""),this.imageList.querySelectorAll(".prefix-input").forEach(s=>{s.addEventListener("input",r=>{const t=r.target,e=parseInt(t.dataset.index);this.images[e].prefix=t.value})}),this.imageList.querySelectorAll(".remove-btn").forEach(s=>{s.addEventListener("click",r=>{const t=r.target,e=parseInt(t.dataset.index);this.images.splice(e,1),this.renderImageList()})})}handleModeChange(){const s=document.querySelector('input[name="mode"]:checked').value,r=document.getElementById("sizeOptions");s==="resize"||s==="split-resize"?r.style.display="block":r.style.display="none"}async processImages(){if(this.images.length===0)return;const s=document.querySelector('input[name="mode"]:checked').value,r=parseInt(document.getElementById("quality").value),t=parseInt(document.getElementById("width").value)||512,e=parseInt(document.getElementById("height").value)||512,i=document.getElementById("globalPrefix").value||"image",o=new FormData,d=[];this.images.forEach((l,c)=>{o.append("images",l.file),d.push({mode:s,quality:r,width:t,height:e,prefix:l.prefix||i})}),o.append("options",JSON.stringify(d)),this.showProgress();try{const l=await fetch("/api/process",{method:"POST",body:o});if(!l.ok)throw new Error("Fehler bei der Verarbeitung");const c=await l.json();this.showResults(c.results)}catch(l){console.error("Fehler:",l),alert("Fehler bei der Bildverarbeitung")}finally{this.hideProgress()}}showProgress(){this.progressOverlay.style.display="flex",this.animateProgress()}animateProgress(){let s=0;const r=setInterval(()=>{s+=Math.random()*15,s>90&&(clearInterval(r),s=90),this.progressFill.style.width=`${s}%`,this.progressText.textContent=`${Math.round(s)}%`},200)}hideProgress(){this.progressFill.style.width="100%",this.progressText.textContent="100%",setTimeout(()=>{this.progressOverlay.style.display="none",this.progressFill.style.width="0%"},500)}showResults(s){this.resultsSection.style.display="block",this.resultsList.innerHTML=s.map(r=>`
      <div class="result-item">
        <h3>${r.original}</h3>
        <p class="size-info">
          Original: ${this.formatFileSize(r.originalSize)} â†’ 
          Komprimiert: ${this.formatFileSize(r.processed.reduce((t,e)=>t+e.size,0))}
          <span class="savings">
            (${this.calculateSavings(r.originalSize,r.processed.reduce((t,e)=>t+e.size,0))}% gespart)
          </span>
        </p>
        <div class="processed-files">
          ${r.processed.map(t=>`
            <div class="processed-file">
              <span class="file-name">${t.filename}</span>
              <span class="file-size">${this.formatFileSize(t.size)}</span>
              <a href="${t.url}" download="${t.filename}" class="download-btn">
                ðŸ“¥ Download
              </a>
            </div>
          `).join("")}
        </div>
      </div>
    `).join(""),this.resultsSection.scrollIntoView({behavior:"smooth"})}async downloadAll(){const s=this.resultsList.querySelectorAll(".download-btn");for(const r of Array.from(s)){const t=r.href,e=r.download,i=await(await fetch(t)).blob(),o=URL.createObjectURL(i),d=document.createElement("a");d.href=o,d.download=e,document.body.appendChild(d),d.click(),document.body.removeChild(d),URL.revokeObjectURL(o),await new Promise(l=>setTimeout(l,100))}}formatFileSize(s){if(s===0)return"0 Bytes";const r=1024,t=["Bytes","KB","MB","GB"],e=Math.floor(Math.log(s)/Math.log(r));return Math.round(s/Math.pow(r,e)*100)/100+" "+t[e]}calculateSavings(s,r){const t=(s-r)/s*100;return Math.round(t)}}document.addEventListener("DOMContentLoaded",()=>{new p});(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const i of e.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function s(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function r(t){if(t.ep)return;t.ep=!0;const e=s(t);fetch(t.href,e)}})();
